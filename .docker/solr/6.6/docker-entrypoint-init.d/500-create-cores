#! /bin/bash
set -me

SCRIPT_NAME=`basename "$0"`

if [[ -z ${SOLR_CORE_NAME+x} ]]; then
    echo "$SCRIPT_NAME: No SOLR_CORE_NAME set; skipping core creation."
else

    # cores get created in SOLR_HOME
    CORE_DIR="${SOLR_HOME:-/opt/solr/server/solr}/$SOLR_CORE_NAME"

    if [[ -d $CORE_DIR ]]; then
        echo "$SCRIPT_NAME: $CORE_DIR exists; skipping core creation"
    else

        # Copy the Search API configs over to the Solr core directory.
        rsync -a /opt/search_api_solr/solr-conf/6.x/ $CORE_DIR/
        mkdir $CORE_DIR/conf
        mv $CORE_DIR/elevate.xml $CORE_DIR/conf/elevate.xml

        start-local-solr

        echo "$SCRIPT_NAME: Creating Search API Solr core: $SOLR_CORE_NAME"
        /opt/solr/bin/solr create -c $SOLR_CORE_NAME

        # See https://github.com/docker-solr/docker-solr/issues/27
        echo "$SCRIPT_NAME: Checking core"
        if ! wget -O - 'http://localhost:8983/solr/admin/cores?action=STATUS' | grep -q instanceDir; then
          echo "Could not find any cores"
          exit 1
        fi

        echo "$SCRIPT_NAME: Created Search API Solr core $SOLR_CORE_NAME"

        # check the core_dir exists; otherwise the detecting above will fail after stop/start
        if [ ! -d "$CORE_DIR" ]; then
            echo "$SCRIPT_NAME: Missing $CORE_DIR"
            exit 1
        fi
    fi
fi
